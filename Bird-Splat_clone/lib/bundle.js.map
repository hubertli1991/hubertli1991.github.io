{"version":3,"sources":["webpack/bootstrap 72d0f4fdeda560f3e572","./lib/bird-splat.js","./lib/game.js","./lib/bird.js","./lib/util.js","./lib/gameView.js","./lib/moving_object.js","./lib/asteroid.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;ACzBD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxIA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACrCA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACjBA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACnIA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC9BA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/lib/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 72d0f4fdeda560f3e572\n **/","var Game = require(\"./game.js\");\nvar GameView = require(\"./gameView.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  var canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  var ctx = canvasEl.getContext(\"2d\");\n  var game = new Game();\n\n  var startGame = function() {\n    new GameView(game, ctx).start();\n    document.removeEventListener( \"click\", startGame );\n  };\n\n  game.draw(ctx);\n  ctx.font = \"30px Ariel\";\n  ctx.fillStyle = \"white\";\n  ctx.fillText(\"Click to start.\", 350, 200);\n  ctx.fillText(\"Press 'Up' to flap and 'Down' to dive.\", 350, 250);\n  ctx.fillText(\"Press 'Space' to pause or continue game\", 350, 350);\n  ctx.fillText(\"Press 'g' to turn on or off God Mode\", 350, 400);\n\n  document.addEventListener( \"click\", startGame );\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bird-splat.js\n ** module id = 0\n ** module chunks = 0\n **/","var Bird = require(\"./bird.js\");\nvar Asteroid = require('./asteroid.js');\nvar Util = require('./util.js');\n\nvar Game = function() {\n\n  this.bird = [ new Bird() ];\n  this.asteroids = [ new Asteroid() ];\n\n  this.timeSinceLastAsteroid = 0;\n\n  this.birdIsGod = false;\n\n  this.shouldGameContinue = true;\n};\n\nGame.BG_COLOR = \"#000000\";\nGame.DIM_X = 1000;\nGame.DIM_Y = 600;\n//frames per second\nGame.FPS = 5;\n\nGame.prototype.addAsteroid = function() {\n  var asteroid = new Asteroid();\n\n  var numOfAsterorids = this.asteroids.length;\n  for (var i = 0; i < numOfAsterorids; i++) {\n    if ( this.collideCheck(asteroid, this.asteroids[i]) ) {\n      break;\n    }\n    if ( i === numOfAsterorids - 1 ) {\n      this.asteroids.push( asteroid );\n    }\n  }\n};\n\nGame.prototype.removeAllAsteroids = function() {\n  this.asteroids = [ new Asteroid() ];\n};\n\nGame.prototype.allObjects = function() {\n  return( [].concat(this.bird, this.asteroids) );\n};\n\nGame.prototype.draw = function (ctx) {\n  ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n  ctx.fillStyle = Game.BG_COLOR;\n  ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n  this.allObjects().forEach(function (object) {\n    object.draw(ctx);\n  });\n};\n\nGame.prototype.moveObjects = function (timeDelta) {\n  this.allObjects().forEach(function (object) {\n    object.move(timeDelta);\n  });\n};\n\nGame.prototype.shouldGameAddAsteroid = function(timeDelta) {\n  // comment out code to test game with only one asteroid\n  this.timeSinceLastAsteroid += timeDelta;\n  return( this.timeSinceLastAsteroid >= 1000 );\n};\n\nGame.prototype.step = function (timeDelta) {\n  // check to see if the game should add an asteroid\n  if (this.shouldGameAddAsteroid(timeDelta)) {\n    this.addAsteroid();\n    this.timeSinceLastAsteroid = 0;\n  }\n\n  // remove asteroids that are out of bounds\n  for (var i = 0; i < this.asteroids.length; i++) {\n    if( this.asteroids[i].pos[0] < -300 ) {\n      this.asteroids.splice(i,1);\n    }\n  }\n\n  if ( this.birdIsGod === false ) {\n    this.birdOutOfBounds();\n    this.birdCollideCheckAll();\n  }\n\n  this.moveObjects(timeDelta);\n};\n\nGame.prototype.collideCheck = function(objectOne, objectTwo) {\n  var target = objectOne.radius + objectTwo.radius;\n  return ( Util.dist( objectOne.pos, objectTwo.pos ) <= target );\n};\n\nGame.prototype.birdPostCollision = function(bird, asteroid) {\n  // Remember, in Canvas, the y-coordinates are reversed!!!!\n  // cos( pi / 2 ) ~ 0.71\n  // bird should fall if it hits the 'fourth quarter of the asteroid's left side' or 'the fourth quadrent of the asteroid'\n\n  if ( ( bird.pos[1] > asteroid.pos[1] + asteroid.radius * 0.71 ) || ( bird.pos[0] > asteroid.pos[0] && bird.pos[1] > asteroid.pos[1] ) ) {\n    return \"fall\";\n  } else {\n    return \"splat\";\n  }\n};\n\nGame.prototype.collisionResult = function(bird, asteroid) {\n  //remove listener\n  this.shouldGameContinue = false;\n\n  this._birdPostCollision = this.birdPostCollision(bird, asteroid);\n\n  if( this._birdPostCollision === \"fall\") {\n    bird.fallAfterCollision();\n  } else {\n    bird.splatAfterCollision();\n  }\n\n  asteroid.afterCollisionWithBird();\n};\n\nGame.prototype.birdCollideCheckAll = function() {\n  var bird = this.bird[0];\n  for (var i = 0; i < this.asteroids.length; i++) {\n    if (this.collideCheck(bird, this.asteroids[i])) {\n        this.collisionResult(bird, this.asteroids[i]);\n        break;\n    }\n  }\n};\n\nGame.prototype.birdOutOfBounds = function(bird) {\n  if ( this.bird[0].pos[1] < 0 || this.bird[0].pos[1] > 600 ) {\n    this.shouldGameContinue = false;\n  }\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","var Util = require(\"./util.js\");\nvar MovingObject = require(\"./moving_object.js\");\n\nvar Bird = function() {\n\n  var options = {\n    pos: [500, 300],\n    color: \"#505050\",\n    vel: [0, 1],\n    radius: 20\n  };\n\n  var bird = this;\n  MovingObject.call(bird, options);\n};\n\nUtil.inherits(Bird, MovingObject);\n\nBird.prototype.jump = function(e) {\n  switch (e.keyCode) {\n    case ( 38 ):\n      this.pos[1] -= 30;\n      break;\n    case ( 40 ):\n      this.pos[1] += 30;\n      break;\n  }\n};\n\nBird.prototype.splatAfterCollision = function() {\n  this.vel = [-2, 0];\n};\n\nBird.prototype.fallAfterCollision = function() {\n  this.vel = [-1, 1];\n};\n\nmodule.exports = Bird;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bird.js\n ** module id = 2\n ** module chunks = 0\n **/","var Util = {\n\n  inherits: function(ChildClass, BaseClass) {\n    function Surrogate() {}\n    Surrogate.prototype = BaseClass.prototype;\n    ChildClass.prototype = new Surrogate();\n    ChildClass.prototype.constructor = ChildClass;\n  },\n\n  dist: function (pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  }\n\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 3\n ** module chunks = 0\n **/","var GameView = function(game, ctx) {\n  this.ctx = ctx;\n  this.game = game;\n  this.bird = this.game.bird[0];\n\n  this.pauseGame = false;\n\n  this.onKeydownHandler = this.onKeydown.bind(this);\n};\n\nGameView.prototype.onKeydown = function(e) {\n// comment out this part before deployment - BEGIN\n// Or use them to cheat\n  // press \"s\" to remove all asteroids\n  if ( e.keyCode === 83 ) {\n    this.removeAllAsteroids();\n  }\n  // press \"x\" to lose\n  if ( e.keyCode === 88 ) {\n    this.game.shouldGameContinue = false;\n  }\n  // press \"space bar\" to pause or continue game\n  if ( e.keyCode === 32 ) {\n    this.pauseGameToggle();\n  }\n  // press \"g\" to turn God Mode on or off\n  if ( e.keyCode === 71 ) {\n    this.turnOnGodModeToggle();\n  }\n// comment out this part before deployment - END\n\n  this.bird.jump(e);\n};\n\n\n// development methods - BEGIN\nGameView.prototype.pauseGameToggle = function() {\n  if ( this.pauseGame ) {\n    this.pauseGame = false;\n  } else {\n    this.pauseGame = true;\n  }\n};\n\nGameView.prototype.turnOnGodModeToggle = function() {\n  if ( this.game.birdIsGod ) {\n    this.game.birdIsGod = false;\n  } else {\n    this.game.birdIsGod = true;\n  }\n};\n\nGameView.prototype.removeAllAsteroids = function() {\n  this.game.removeAllAsteroids();\n};\n// development methods - END\n\n\nGameView.prototype.addEventListener = function() {\n  document.addEventListener( \"keydown\", this.onKeydownHandler );\n};\n\nGameView.prototype.removeEventListener = function() {\n  document.removeEventListener( \"keydown\", this.onKeydownHandler );\n};\n\nGameView.prototype.stop = function() {\n  this.removeEventListener();\n  document.addEventListener( \"click\", this.restartGame );\n};\n\n\nGameView.prototype.start = function () {\n\n  this.addEventListener();\n  this.game.birdIsGod = false;\n  this.lastTime = 0;\n  this.millisecondCount = 0;\n  //start the animation\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nGameView.prototype.animate = function(time){\n  // the time variable is the time since DOMContentLoaded\n  // gets automatically passed into the requestAnimationFrame callback\n  // we need to remove the time between DOMContentLoaded and clicks to start the game\n  // otherwise, timeDelta will be wrong and the game will be running during this break\n  // that's where timeAdjustment comes in\n  this.timeAdjustment = this.timeAdjustment || time;\n  // runTime is the time since GameView.prototype.start was invoked\n  this.runTime = time - this.timeAdjustment;\n  // EVERYTHING depends on timeDelta\n  var timeDelta;\n  if (this.pauseGame) {\n    timeDelta = 0;\n  } else {\n    timeDelta = this.runTime - this.lastTime;\n  }\n\n  this.game.step(timeDelta);\n  // Make sure this.game.draw gets invoked before this.ctx.fillText get invoked\n  // Otherwise, the text will not render\n  this.game.draw(this.ctx);\n\n  // if we don't check shouldGameContinue, score would just increment with runTime forever\n  if ( this.game.shouldGameContinue ) {\n    this.score = parseInt(this.runTime / 1000);\n  } else {\n    this.stop();\n    this.ctx.font = \"30px Ariel\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fillText(\"Game Over.\", 350, 200);\n    this.ctx.fillText(\"You survived for \" + this.score + \" seconds.\", 350, 250);\n    this.ctx.fillText(\"Click to Play Again\", 350, 300);\n  }\n\n  this.lastTime = this.runTime;\n\n  this.ctx.font = \"30px Ariel\";\n  this.ctx.fillStyle = \"white\";\n  this.ctx.fillText(\"score: \" + this.score, 100, 100);\n\n  //every call to animate requests causes another call to animate\n  requestAnimationFrame(this.animate.bind(this));\n\n};\n\nGameView.prototype.restartGame = function() {\n  window.location.reload();\n};\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gameView.js\n ** module id = 4\n ** module chunks = 0\n **/","var Util = require(\"./util\");\n\nvar MovingObject = function(options) {\n  this.pos = options.pos;\n  this.vel = options.vel;\n  this.radius = options.radius;\n  this.color = options.color;\n};\n\nMovingObject.prototype.draw = function(ctx) {\n\n  ctx.fillStyle = this.color;\n\n  ctx.beginPath();\n  ctx.arc(\n    this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n  );\n  ctx.fill();\n};\n\nMovingObject.NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nMovingObject.prototype.move = function(timeDelta) {\n  var velocityScale = timeDelta / MovingObject.NORMAL_FRAME_TIME_DELTA,\n    offsetX = this.vel[0] * velocityScale,\n    offsetY = this.vel[1] * velocityScale;\n\nthis.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n};\n\nmodule.exports = MovingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/moving_object.js\n ** module id = 5\n ** module chunks = 0\n **/","var Util = require(\"./util\");\nvar MovingObject = require(\"./moving_object\");\n\nvar Asteroid = function() {\n\n  this.obj = \"asteroid\";\n\n  // var position =\n\n  var options = {\n    pos: [ 1200, Math.random() * 600 ],\n    color: \"green\",\n    vel: [-2, 0],\n    radius: 50 + Math.random() * 100\n  };\n\n  var asteroid = this;\n  MovingObject.call(asteroid, options);\n};\n\nUtil.inherits(Asteroid, MovingObject);\n\nAsteroid.prototype.afterCollisionWithBird = function() {\n  // Bird is not big enough to cause any damage\n  // wrote this just to be fair to the asteroid\n};\n\nmodule.exports = Asteroid;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/asteroid.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}